import Head from 'next/head'
import Image from 'next/image'
import {useState} from 'react'
import { db } from "../firebase/initFirebase" 
import { useAuth } from '../context/AuthContext'
import { doc, setDoc,addDoc,getDocs ,getFirestore } from "firebase/firestore";
import { collection, query, where } from "firebase/firestore";
//import styles from '../styles/Sub.module.css'

export default function Subscribe() {

  const { user, signup ,loading} = useAuth()
    const [qcode,setqcode]=useState("");
  const addqtouserhissubq=async (e)=>
  {
        e.preventDefault();
      

        const dataobj={
          code:qcode
        };

      let flag=false;
      const q0=query(collection(db,"queues"), where("code", "==",qcode));
      const querySnapshot0 = await getDocs(q0);
      querySnapshot0.forEach((doc) => {
        // if that queue exists in the list of queues
        dataobj.qname=doc.data().qname
        flag=true;
      
      });


      if(flag)
      {
    
                let requs,reqid,arr=[dataobj];
                const usersref = collection(db, "users");
                const q = query(usersref, where("email", "==",user.email));
                const querySnapshot = await getDocs(q);
                querySnapshot.forEach((doc) => {
                    // doc.data() is never undefined for query doc snapshots
                    // console.log(doc.id, " => ", doc.data());
                    requs=doc.data();
                    reqid=doc.id;
                  });
                // console.log("sehereeeeeeeeeeeeee",requs,reqid)
                if(requs.hissubqueue)arr = arr.concat(requs.hissubqueue);
                requs.hisubqueue=arr;
                console.log(requs)
                console.log("hola")
                await setDoc(doc(db,"users",reqid),requs);
                console.log("subscribed to a queue ")
      }

      else errormsg

      
  }









  return (
    <>
    <style>{`
    .container {
      padding: 0 2rem;
    }
    .bttt{
        margin-top:50px;
        color:#eaeaea;
    }
    .main {
      min-height: 100vh;
      padding: 4rem 0;
      flex: 1;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
    }
    
    .footer {
      display: flex;
      flex: 1;
      padding: 2rem 0;
      border-top: 1px solid #eaeaea;
      justify-content: center;
      align-items: center;
    }
    
    .footer a {
      display: flex;
      justify-content: center;
      align-items: center;
      flex-grow: 1;
    }
    
    .title a {
      color: #0070f3;
      text-decoration: none;
    }
    
    .title a:hover,
    .title a:focus,
    .title a:active {
      text-decoration: underline;
    }
    
    .title {
      margin: 0;
      line-height: 1.15;
      font-size: 4rem;
    }
    
    .title,
    .description {
      text-align: center;
    }
    
    .description {
      margin: 4rem 0;
      line-height: 1.5;
      font-size: 1.5rem;
    }
    
    .code {
      background: #fafafa;
      border-radius: 5px;
      padding: 0.75rem;
      font-size: 1.1rem;
      font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
        Bitstream Vera Sans Mono, Courier New, monospace;
    }
    
    .grid {
      display: flex;
      align-items: center;
      justify-content: center;
      flex-wrap: wrap;
      max-width: 800px;
    }
    
    .card {
      margin: 1rem;
      padding: 1.5rem;
      text-align: left;
      color: inherit;
      text-decoration: none;
      border: 1px solid #eaeaea;
      border-radius: 10px;
      transition: color 0.15s ease, border-color 0.15s ease;
      max-width: 300px;
    }
    
    .card:hover,
    .card:focus,
    .card:active {
      color: #0070f3;
      border-color: #0070f3;
    }
    
    .card h2 {
      margin: 0 0 1rem 0;
      font-size: 1.5rem;
    }
    
    .card p {
      margin: 0;
      font-size: 1.25rem;
      line-height: 1.5;
    }
    
    .logo {
      height: 1em;
      margin-left: 0.5rem;
    }
    
    @media (max-width: 600px) {
      .grid {
        width: 100%;
        flex-direction: column;
      }
    }
    
    `}</style>
    <div className="container">
      <Head>
        <title>QuickQ</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="bttt"><h2>Subscribe to a Queue</h2></div>
    
      <main className="main">
      <div className="wrapper">
      <div className="title-text">
        <div className="title login">Enter Code</div>
      </div>
      <div className="form-container">
        <div className="form-inner">
          <form action="#" className="login">
            <div className="field">
            <input type="text" name="qcode" required value={qcode} onChange={(e)=>{setqcode(e.target.value)}} />
            </div>
        <div className="field btn">
              <div className="btn-layer"></div>
              <input type="submit" onClick={addqtouserhissubq} value="Subscribe"/>
            </div>
              </form>
        </div>
      </div>
    </div>
      </main>
      </div>
</>
  )
}
